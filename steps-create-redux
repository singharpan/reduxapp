npm install redux react-redux

-------------------------Store Creation..................

import {createStore} from "redux"///in index.js

create store---->const store=createStore()

import {Provider} from "react-redux"

wrap "App" component with provider

initialize <provider> with store....<Provider store={store}

-------------------------------Reducer Creation------------------------
Only reducer have power to update state.

Reducer is passed as argument to store...i.e const store=createStore(reducer)

Reducer initialize data to "central store".....there can be more than one reducer possible

Reducer is basically a type of Function....a new "reducers" folder is created and new file "reducer.jsx" is initalized..

make reducer function and export it

reducer take (state,action) as argumnet.... reducer should have some initial data to initlaize store....

then reducer is imported and passed to store in "index.js 

....................Subscribe redux by Component............

now there is some initail data available in store 

to use that data by "App.js" ...this component need to subscribe to store

for that we need to ....import {connect} from "react-redux".....

now "connect" is wrapped to App component...connect return some Higher Order Component....

and HigherOrder componnet takes a component as argument

connect is wrapped to App component like....i.e  export default connect()(App);

now we can use store data in our component using "props"

-------------------Dispatch Action----------------------------------

//for updating the state...action will be "type and payload(data)





------------------------------Action Creator and Thunk.........................

//Used for Asyschronous actions
action is a object
new actions folder is made

action creator is a function that return action

redux thunk work as middleware b/w action and reducer
thunk is used using --->npm install redux-thunk


inilaially we were giving action payload directly to reducer....and now data is taking time to come ....so we need thunk in b/w

thunk is used in action-creator file for asynchronous opertions




---------------------------Combine Reducers-----------------------------------

In every project we need more than one reducers..

like..i.e...for from we need a reducer,for authenticaion we need a reducer,for updation we need a reducer

different tasks need different reducers

///at the end we combine all the reducer

we first import {combineReducer} from "redux"

//we send our expected type of state data from the reducers

//finally combine reducer combine all the data in "index.js" and make a state object


---------------------------------Sequence of Opertions....................

Component Subscribe-->Action-->Reducer-->Store
